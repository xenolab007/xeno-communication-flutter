// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name XenoCommunicationIos
import Foundation
import Swift
@_exported import XenoCommunicationIos
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class NetworkClient {
  @objc deinit
}
@_hasMissingDesignatedInitializers public class XenoSDK {
  public static var instance: (any XenoCommunicationIos.XenoCommunicationPlugin)? {
    get
  }
  @discardableResult
  public static func initialise(config: XenoCommunicationIos.XenoConfig) -> any XenoCommunicationIos.XenoCommunicationPlugin
  @objc deinit
}
public struct XenoConfig {
  public init(apiKey: Swift.String, isProduction: Swift.Bool)
}
public protocol XenoCommunicationPlugin {
  var config: XenoCommunicationIos.XenoConfig { get set }
  func setUser(country: Swift.String?, phone: Swift.String?, email: Swift.String?, name: Swift.String?)
  func updateDeviceToken(token: Swift.String)
  func setNotificationPermission(hasPermission: Swift.Bool)
  func onMessageReceived(remoteMessage: [Swift.String : [Swift.String : Any]])
  func unsetUser()
}
